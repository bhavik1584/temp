<?php

$i = 0;
$totalRowprice = [76,150,370,128,200];
$totalBeforeGst = [3.619047619047619,7.142857142857143,17.61904761904762,28,30.50847457627119];
$subtotalrow = [];
$discount = [];
$grandtotalRoww = [];
$gstArray = [5,5,5,28,18];
$perRowgstAfterDiscount = [];

for( $i ; $i< count($totalBeforeGst) ;$i++)
{
    $subtotalrow[$i] = ($totalRowprice[$i] - $totalBeforeGst[$i]);
    $discount[$i] = round($subtotalrow[$i] * 53.37 /100,2);
    $grandtotalRoww[$i] = round($subtotalrow[$i] - $discount[$i],2);
    $perRowgstAfterDiscount[$i] =  round($grandtotalRoww[$i] * $gstArray[$i] / 100,2);
}



// var_dump($grandtotalRoww);
// var_dump($totalBeforeGstRound);
// var_dump($taxable);
// var_dump($discount);
// var_dump($grandTotal);
// var_dump(round(array_sum($grandtotalRoww),2));
// var_dump(round(array_sum($perRowgstAfterDiscount),2));
echo(round(array_sum($grandtotalRoww),2) + floor(array_sum($perRowgstAfterDiscount) *100) / 100 );



$minValue = $sparecapacity < $casesTrays->application_amount && $sparecapacity < $total_overall_cap && $sparecapacity > 0
    ? $sparecapacity
    : ($casesTrays->application_amount < $total_overall_cap && $casesTrays->application_amount > 0
        ? $casesTrays->application_amount
        : ($total_overall_cap > 0
            ? $total_overall_cap
            : 0));



    $all = Cases::count();
    $odApplication = Cases::where('category','A')->where('created_at', '<=', $overdueDate)->count();
    $odReview = Cases::where('category','R')->where('created_at', '<=', $overdueDate)->count();
    $activeReview = Cases::where('category','R')->where('created_at', '>', $overdueDate)->count();
    $activeApplication = Cases::where('category','A')->where('created_at', '>', $overdueDate)->count();

    $data = ['all'=>$all,'odApplication'=>$odApplication,'activeApplication'=>$activeApplication,'odReview'=>$odReview,'activeReview'=>$activeReview];






